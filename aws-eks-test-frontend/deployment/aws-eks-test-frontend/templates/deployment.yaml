apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "aws-eks-test-frontend.fullname" . }}
  labels:
    {{- include "aws-eks-test-frontend.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "aws-eks-test-frontend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "aws-eks-test-frontend.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "aws-eks-test-frontend.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          - name: config-volume
            mountPath: /etc/config
          command: [ "bash", "-c", "mv -f /etc/config/runtime.json /app/src/assets/ && npm run build --prod" ]
          ports:
            - containerPort: {{ .Values.service.internalPort }}
          livenessProbe:
            httpGet:
              path: /
              {{ default 80 .Values.service.internalPort }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ default 80 .Values.service.internalPort }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: config-volume
          configMap:
            name: metadata-configmap
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
